/*
链接：https://www.nowcoder.com/questionTerminal/e016ad9b7f0b45048c58a9f27ba618bf
来源：牛客网

有一个整数数组，请你根据快速排序的思路，找出数组中第K大的数。

给定一个整数数组a,同时给定它的大小n和要找的K(K在1到n之间)，请返回第K大的数，保证答案存在。

测试样例：
[1,3,5,2,2],5,3
返回：2
*/
import java.util.*;

public class Finder {
    public int findKth(int[] a, int n, int K) {
        // write code here
        return findKth(a,0,n-1,K);
    }
    public int findKth(int[] a, int left,int right, int K) {
        int m=quicksort(a,left,right);
        if(K==m-left+1){
            return a[m];
        }else if(K<(m-left+1)){
            return findKth(a,left,m-1,K);
        }else{
            return findKth(a,m+1,right,K-m+left-1);
        }
        
    }
    public int quicksort(int[] a,int left,int right){
     
        int mid=a[left];
        while(left<right){
            while(left<right&&a[right]<=mid){
                right--;
            }
            a[left]=a[right];
            while(left<right&&a[left]>=mid){
                left++;
            }
            a[right]=a[left];
        }
        a[left]=mid;
        return left;
    }
}
