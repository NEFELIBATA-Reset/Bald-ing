/*
编写代码，以给定值x为基准将链表分割成两部分，所有小于x的结点排在大于或等于x的结点之前

给定一个链表的头指针 ListNode* pHead，请返回重新排列后的链表的头指针。注意：分割以后保持原来的数据顺序不变。
*/
import java.util.*;

/*
public class ListNode {
    int val;
    ListNode next = null;

    ListNode(int val) {
        this.val = val;
    }
}*/
public class Partition {
    public ListNode partition(ListNode pHead, int x) {
        // write code here
        ListNode small=null;
        ListNode smalllast=null;
        ListNode big=null;
        ListNode biglast=null;
        ListNode cur=pHead;
        while(cur!=null){
            if(cur.val<x){
                if(small==null){
                    small=cur;
                }else{
                    smalllast.next=cur;
                }
                smalllast=cur;
            }else{
                if(big==null){
                    big=cur;
                }else{
                    biglast.next=cur;
                }
                biglast=cur;
            }
            cur=cur.next;
        }
        if(small==null){
            return big;
        }else{
            smalllast.next=big;
            if(biglast!=null){
                biglast.next=null;
            }
        }
        return small;
    }
}
