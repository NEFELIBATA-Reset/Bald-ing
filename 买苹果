/*
链接：https://www.nowcoder.com/questionTerminal/61cfbb2e62104bc8aa3da5d44d38a6ef
来源：牛客网

小易去附近的商店买苹果，奸诈的商贩使用了捆绑交易，只提供6个每袋和8个每袋的包装(包装不可拆分)。 可是小易现在只想购买恰好n个苹果，小易想购买尽量少的袋数方便携带。如果不能购买恰好n个苹果，小易将不会购买。

输入描述:
输入一个整数n，表示小易想购买n(1 ≤ n ≤ 100)个苹果


输出描述:
输出一个整数表示最少需要购买的袋数，如果不能买恰好n个苹果则输出-1
示例1
输入
20
输出
3
*/
//分析：
//1、能买的数目一定是偶数
//2、并且能整除8
//3、偶数取余8的结果只有0，2，4，6，
//   取余6，结果n/8+1;
//   取余4，结果是n/8-1+2=n/8+1;
//   取余2，结果是n/8-2+3=n/8+1;


import java.util.Scanner;
public class Main{
    public static int fun(int n){
        if(n%2!=0||n==10||n<6){
            return -1;
        }
        if(n%8==0){
            return n/8;
        }else{
            return n/8+1;
        }
    }
    public static void main(String[] args){
        Scanner sc=new Scanner(System.in);
        int n=sc.nextInt();
        System.out.println(fun(n));
    }
}
