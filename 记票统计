/*
输入候选人的人数，第二行输入候选人的名字，第三行输入投票人的人数，第四行输入投票。

输出描述:
每行输出候选人的名字和得票数量。

示例1
输入
4
A B C D
8
A B C D E F G H
输出
A : 1
B : 1
C : 1
D : 1
Invalid : 4


问题：
1、代码中用到了LinkedHashMap,为什么不用HashMap?
    因为hashMap存储时会乱序，如果你想存的东西要保证一定的顺序就用LinkedHashMap
2、为什么会有无用的sc.nextLine()?
    因为 nextInt() 接收一个整型字符，不会读取 \n，nextline() 读入一行文本，会读入 \n 字符。所以可以在 nextInt() 和 nextLine() 中间加一个 nextLine() 语句来接收这个 \n 。 
*/

import java.util.*;
public class Main{
    public static void main(String[] args){
          Scanner sc=new Scanner(System.in);
        while(sc.hasNext()){
            int n=sc.nextInt();
            sc.nextLine();
            String s1=sc.nextLine();
            String[] str1=s1.split(" ");
            LinkedHashMap<String,Integer> map=new LinkedHashMap<>();
            for(int i=0;i<str1.length;i++){
                map.put(str1[i],0);
            }
            int m=sc.nextInt();
            sc.nextLine();
            String s2=sc.nextLine();
            String[] str2=s2.split(" ");
            int invalid=0;
            for(int j=0;j<m;j++){
                if(map.containsKey(str2[j])){
                    map.put(str2[j],map.get(str2[j])+1);
                }else{
                    invalid++;
                }
            }
            Set<String> set=map.keySet();
            for(String s:set){
                System.out.println(s+" : "+map.get(s));
            }
            System.out.println("Invalid : "+invalid);
        }
    }
}
